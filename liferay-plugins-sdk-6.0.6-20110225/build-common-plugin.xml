<?xml version="1.0"?>

<project name="build-common-plugin" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-common.xml" />

	<if>
		<available file="docroot/WEB-INF/liferay-plugin-package.properties" />
		<then>
			<property file="docroot/WEB-INF/liferay-plugin-package.properties" prefix="plugin-package" />
			<property name="plugin.version" value="${plugin-package.module-incremental-version}" />

			<property file="docroot/WEB-INF/liferay-plugin-package.properties" prefix="plugin-package" />

			<if>
				<isset property="plugin-package.portal-dependency-jars" />
				<then>
					<property name="plugin.jars" value="${plugin-package.portal-dependency-jars}" />
				</then>
				<else>
					<property name="plugin.jars" value="${plugin-package.portal.dependency.jars}" />
				</else>
			</if>

			<property file="docroot/WEB-INF/liferay-plugin-package.properties" prefix="plugin-package" />

			<if>
				<isset property="plugin-package.portal-dependency-tlds" />
				<then>
					<property name="plugin.tlds" value="${plugin-package.portal-dependency-tlds}" />
				</then>
				<else>
					<property name="plugin.tlds" value="${plugin-package.portal.dependency.tlds}" />
				</else>
			</if>
		</then>
	</if>

	<antelope:stringutil string="${basedir}" property="plugin.name.beginindex">
		<antelope:lastindexof string="${file.separator}" />
	</antelope:stringutil>

	<antelope:math
		datatype="int"
		operand1="${plugin.name.beginindex}"
		operand2="1"
		operation="+"
		result="plugin.name.beginindex"
	/>

	<antelope:stringutil string="${basedir}" property="plugin.name">
		<antelope:substring beginindex="${plugin.name.beginindex}" />
	</antelope:stringutil>

	<if>
		<antelope:endswith string="${plugin.name}" with="-client" />
		<then>
			<property name="plugin.file" value="${project.dir}/dist/${plugin.name}-${lp.version}.${plugin.version}.jar" />
		</then>
		<else>
			<property name="plugin.file" value="${project.dir}/dist/${plugin.name}-${lp.version}.${plugin.version}.war" />
		</else>
	</if>

	<target name="all">
		<antcall target="clean" />
		<antcall target="deploy" />
	</target>

	<target name="build-client">
		<property name="client.url" value="http://localhost:8080/${plugin.name}/axis" />

		<echo message="Make sure the server is listening on ${client.url}." />
		<echo message="" />

		<mkdir dir="docroot/WEB-INF/client/src" />

		<java
			classname="com.liferay.portal.tools.PortalClientBuilder"
			classpathref="portal.classpath"
			failonerror="true"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="docroot/WEB-INF/server-config.wsdd" />
			<arg value="docroot/WEB-INF/client/src" />
			<arg value="docroot/WEB-INF/client/namespace-mapping.properties" />
			<arg value="${client.url}" />
		</java>

		<mkdir dir="docroot/WEB-INF/client/classes" />

		<antcall target="compile-java">
			<param name="javac.classpathref" value="portal.classpath" />
			<param name="javac.destdir" value="docroot/WEB-INF/client/classes" />
			<param name="javac.srcdir" value="docroot/WEB-INF/client/src" />
		</antcall>

		<zip destfile="docroot/WEB-INF/client/${plugin.name}-client.jar">
			<fileset dir="docroot/WEB-INF/client/classes" />
			<fileset dir="docroot/WEB-INF/client/src" />
		</zip>

		<delete dir="docroot/WEB-INF/client/classes" />
		<delete dir="docroot/WEB-INF/client/src" />
	</target>

	<target name="build-db">
		<java
			classname="com.liferay.portal.tools.DBBuilder"
			classpathref="portal.classpath"
			fork="true"
			maxmemory="384m"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<jvmarg value="-Dsql.dir=docroot/WEB-INF/sql" />
			<arg value="${database.name}" />
			<arg value="${database.types}" />
		</java>

		<delete file="velocity.log" quiet="true" />
	</target>

	<target name="build-lang-cmd">
		<java
			classname="com.liferay.portal.tools.LangBuilder"
			classpathref="portal.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<jvmarg value="-Duser.country=US" />
			<jvmarg value="-Duser.language=en" />
			<arg value="${lang.dir}" />
			<arg value="${lang.file}" />
		</java>

		<copy file="${lang.dir}/${lang.file}.properties" tofile="${lang.dir}/${lang.file}_en.properties" />
	</target>

	<target name="build-service">
		<mkdir dir="docroot/WEB-INF/classes" />
		<mkdir dir="docroot/WEB-INF/lib" />
		<mkdir dir="docroot/WEB-INF/service" />
		<mkdir dir="docroot/WEB-INF/sql" />
		<mkdir dir="docroot/WEB-INF/src" />

		<copy todir="docroot/WEB-INF/classes">
			<fileset dir="docroot/WEB-INF/src" excludes="**/*.java" />
		</copy>

		<path id="service.classpath">
			<path refid="lib.classpath" />
			<path refid="portal.classpath" />
			<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
			<pathelement location="docroot/WEB-INF/classes" />
		</path>

		<if>
			<not>
				<isset property="service.input.file" />
			</not>
		    	<then>
		    		<property name="service.input.file" value="docroot/WEB-INF/service.xml"/>
			</then>
		</if>

		<java
			classname="com.liferay.portal.tools.servicebuilder.ServiceBuilder"
			classpathref="service.classpath"
			fork="true"
			maxmemory="256m"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger" />
			<jvmarg value="-Dservice.input.file=${service.input.file}" />
			<jvmarg value="-Dservice.hbm.file=docroot/WEB-INF/src/META-INF/portlet-hbm.xml" />
			<jvmarg value="-Dservice.orm.file=docroot/WEB-INF/src/META-INF/portlet-orm.xml" />
			<jvmarg value="-Dservice.model.hints.file=docroot/WEB-INF/src/META-INF/portlet-model-hints.xml" />
			<jvmarg value="-Dservice.spring.file=docroot/WEB-INF/src/META-INF/portlet-spring.xml" />
			<jvmarg value="-Dservice.spring.base.file=docroot/WEB-INF/src/META-INF/base-spring.xml" />
			<jvmarg value="-Dservice.spring.cluster.file=docroot/WEB-INF/src/META-INF/cluster-spring.xml" />
			<jvmarg value="-Dservice.spring.dynamic.data.source.file=docroot/WEB-INF/src/META-INF/dynamic-data-source-spring.xml" />
			<jvmarg value="-Dservice.spring.hibernate.file=docroot/WEB-INF/src/META-INF/hibernate-spring.xml" />
			<jvmarg value="-Dservice.spring.infrastructure.file=docroot/WEB-INF/src/META-INF/infrastructure-spring.xml" />
			<jvmarg value="-Dservice.spring.shard.data.source.file=docroot/WEB-INF/src/META-INF/shard-data-source-spring.xml" />
			<jvmarg value="-Dservice.api.dir=docroot/WEB-INF/service" />
			<jvmarg value="-Dservice.impl.dir=docroot/WEB-INF/src" />
			<jvmarg value="-Dservice.json.file=docroot/js/service.js" />
			<jvmarg value="-Dservice.sql.dir=docroot/WEB-INF/sql" />
			<jvmarg value="-Dservice.sql.file=tables.sql" />
			<jvmarg value="-Dservice.sql.indexes.file=indexes.sql" />
			<jvmarg value="-Dservice.sql.indexes.properties.file=indexes.properties" />
			<jvmarg value="-Dservice.sql.sequences.file=sequences.sql" />
			<jvmarg value="-Dservice.auto.namespace.tables=true" />
			<jvmarg value="-Dservice.bean.locator.util=com.liferay.util.bean.PortletBeanLocatorUtil" />
			<jvmarg value="-Dservice.props.util=com.liferay.util.service.ServiceProps" />
			<jvmarg value="-Dservice.plugin.name=${plugin.name}" />
		</java>

		<delete file="ServiceBuilder.temp" />

		<mkdir dir="docroot/WEB-INF/service-classes" />

		<delete file="docroot/WEB-INF/lib/${plugin.name}-service.jar" />

		<path id="service.classpath">
			<fileset dir="${app.server.lib.global.dir}" includes="*.jar" />
			<fileset dir="${project.dir}/lib" includes="activation.jar,jsp-api.jar,mail.jar,servlet-api.jar" />
			<fileset dir="docroot/WEB-INF/lib" excludes="${plugin.name}-service.jar" includes="*.jar" />
		</path>

		<antcall target="compile-java">
			<param name="javac.classpathref" value="service.classpath" />
			<param name="javac.destdir" value="docroot/WEB-INF/service-classes" />
			<param name="javac.srcdir" value="docroot/WEB-INF/service" />
			<reference refid="service.classpath" torefid="service.classpath" />
		</antcall>

		<zip
			basedir="docroot/WEB-INF/service-classes"
			destfile="docroot/WEB-INF/lib/${plugin.name}-service.jar"
		/>

		<delete dir="docroot/WEB-INF/service-classes" />
	</target>

	<target name="build-wsdd" depends="compile">
		<path id="wsdd.classpath">
			<path refid="lib.classpath" />
			<path refid="portal.classpath" />
			<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
			<pathelement location="docroot/WEB-INF/classes" />
		</path>

		<java
			classname="com.liferay.portal.tools.WSDDBuilder"
			classpathref="wsdd.classpath"
			fork="true"
			maxmemory="256m"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger" />
			<arg value="docroot/WEB-INF/service.xml" />
			<arg value="docroot/WEB-INF/server-config.wsdd" />
		</java>
	</target>

	<target name="clean" description="clean">
		<delete dir="docroot/WEB-INF/classes" />
		<delete dir="tmp" />
		<delete file="${plugin.file}" />

		<delete>
			<fileset dir="docroot" includes="**/.sprite.png" />
			<fileset dir="docroot" includes="**/.sprite.properties" />
			<fileset dir="docroot" includes="**/Thumbs.db" />
		</delete>

		<antcall target="clean-portal-dependencies" />
	</target>

	<target name="clean-portal-dependencies">
		<if>
			<available file="docroot/WEB-INF/lib" />
			<then>
				<delete>
					<fileset dir="docroot/WEB-INF/lib" includes="${required.portal.jars}" />
					<fileset dir="docroot/WEB-INF/lib" includes="${plugin.jars}" />
				</delete>
			</then>
		</if>

		<if>
			<available file="docroot/WEB-INF/tld" />
			<then>
				<delete>
					<fileset dir="docroot/WEB-INF/tld" includes="${plugin.tlds}" />
				</delete>
			</then>
		</if>
	</target>

	<target name="compile">
		<antcall target="merge" />

		<mkdir dir="docroot/WEB-INF/classes" />
		<mkdir dir="docroot/WEB-INF/lib" />

		<copy todir="docroot/WEB-INF/lib">
			<fileset dir="${app.server.lib.portal.dir}" includes="${plugin.jars}" />
		</copy>

		<copy todir="docroot/WEB-INF/tld">
			<fileset dir="${app.server.portal.dir}/WEB-INF/tld" includes="${plugin.tlds}" />
		</copy>

		<if>
			<available file="docroot/WEB-INF/src" />
			<then>
				<if>
					<available file="tmp" />
					<then>
						<path id="plugin-lib.classpath">
							<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
							<fileset dir="tmp/WEB-INF/lib" includes="*.jar" />
							<pathelement location="docroot/WEB-INF/classes" />
							<pathelement location="tmp/WEB-INF/classes" />
						</path>
					</then>
					<else>
						<path id="plugin-lib.classpath">
							<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
							<pathelement location="docroot/WEB-INF/classes" />
						</path>
					</else>
				</if>

				<copy todir="docroot/WEB-INF/lib">
					<fileset dir="${app.server.lib.portal.dir}" includes="${required.portal.jars}" />
				</copy>

				<if>
					<available file="docroot/WEB-INF/lib/portal-impl.jar" />
					<then>
						<fail>
.

Detected inclusion of portal-impl.jar in WEB-INF/lib.

portal-impl.jar is designed with a large number of singleton classes which are
instantiated on the basis that they will exist alone in the application server.

While compile time issues may be resolved, portlets cannot be made to work by
simply adding portal-impl.jar, because doing so violates the above assumption,
and the resulting problems will be extremely difficult to debug.

Please find a solution that does not require portal-impl.jar.
						</fail>
					</then>
				</if>

				<antcall target="compile-java">
					<param name="javac.classpathref" value="plugin.classpath" />
					<param name="javac.destdir" value="docroot/WEB-INF/classes" />
					<param name="javac.srcdir" value="docroot/WEB-INF/src" />
					<reference refid="plugin-lib.classpath" torefid="plugin-lib.classpath" />
				</antcall>
			</then>
		</if>

		<antcall target="merge" />
	</target>

	<target name="deploy" depends="war">
		<copy file="${plugin.file}" todir="${auto.deploy.dir}" />
	</target>

	<target name="direct-deploy" depends="war">
		<if>
			<antelope:endswith string="${plugin.name}" with="-ext" />
			<then>
				<java
					classname="com.liferay.portal.tools.deploy.ExtDeployer"
					classpathref="portal.classpath"
					fork="true"
					newenvironment="true"
				>

					<!-- Required Arguments -->

					<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
					<jvmarg value="-Dliferay.lib.portal.dir=${app.server.lib.portal.dir}" />
					<jvmarg value="-Ddeployer.base.dir=${project.dir}/dist" />
					<jvmarg value="-Ddeployer.dest.dir=${app.server.deploy.dir}" />
					<jvmarg value="-Ddeployer.app.server.type=${app.server.type}" />
					<jvmarg value="-Ddeployer.unpack.war=true" />
					<jvmarg value="-Ddeployer.file.pattern=${plugin.name}-*.war" />

					<!-- Optional Arguments -->

					<jvmarg value="-Ddeployer.tomcat.lib.dir=${app.server.tomcat.lib.global.dir}" />

					<!-- Dependent Libraries -->

					<arg value="${app.server.lib.portal.dir}/util-java.jar" />
				</java>
			</then>
			<elseif>
				<antelope:endswith string="${plugin.name}" with="-hook" />
				<then>
					<java
						classname="com.liferay.portal.tools.deploy.HookDeployer"
						classpathref="portal.classpath"
						fork="true"
						newenvironment="true"
					>

						<!-- Required Arguments -->

						<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
						<jvmarg value="-Dliferay.lib.portal.dir=${app.server.lib.portal.dir}" />
						<jvmarg value="-Ddeployer.base.dir=${project.dir}/dist" />
						<jvmarg value="-Ddeployer.dest.dir=${app.server.deploy.dir}" />
						<jvmarg value="-Ddeployer.app.server.type=${app.server.type}" />
						<jvmarg value="-Ddeployer.unpack.war=true" />
						<jvmarg value="-Ddeployer.file.pattern=${plugin.name}-*.war" />

						<!-- Optional Arguments -->

						<jvmarg value="-Ddeployer.tomcat.lib.dir=${app.server.tomcat.lib.global.dir}" />

						<!-- Dependent Libraries -->

						<arg value="${app.server.lib.portal.dir}/util-java.jar" />
					</java>
				</then>
			</elseif>
			<elseif>
				<antelope:endswith string="${plugin.name}" with="-layouttpl" />
				<then>
					<java
						classname="com.liferay.portal.tools.deploy.LayoutTemplateDeployer"
						classpathref="portal.classpath"
						fork="true"
						newenvironment="true"
					>

						<!-- Required Arguments -->

						<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
						<jvmarg value="-Dliferay.lib.portal.dir=${app.server.lib.portal.dir}" />
						<jvmarg value="-Ddeployer.base.dir=${project.dir}/dist" />
						<jvmarg value="-Ddeployer.dest.dir=${app.server.deploy.dir}" />
						<jvmarg value="-Ddeployer.app.server.type=${app.server.type}" />
						<jvmarg value="-Ddeployer.unpack.war=true" />
						<jvmarg value="-Ddeployer.file.pattern=${plugin.name}-*.war" />
					</java>
				</then>
			</elseif>
			<elseif>
				<antelope:endswith string="${plugin.name}" with="-portlet" />
				<then>
					<java
						classname="com.liferay.portal.tools.deploy.PortletDeployer"
						classpathref="portal.classpath"
						fork="true"
						newenvironment="true"
					>

						<!-- Required Arguments -->

						<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
						<jvmarg value="-Dliferay.lib.portal.dir=${app.server.lib.portal.dir}" />
						<jvmarg value="-Ddeployer.base.dir=${project.dir}/dist" />
						<jvmarg value="-Ddeployer.dest.dir=${app.server.deploy.dir}" />
						<jvmarg value="-Ddeployer.app.server.type=${app.server.type}" />
						<jvmarg value="-Ddeployer.aui.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-aui.tld" />
						<jvmarg value="-Ddeployer.portlet.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-portlet.tld" />
						<jvmarg value="-Ddeployer.portlet-ext.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-portlet-ext.tld" />
						<jvmarg value="-Ddeployer.security.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-security.tld" />
						<jvmarg value="-Ddeployer.theme.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-theme.tld" />
						<jvmarg value="-Ddeployer.ui.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-ui.tld" />
						<jvmarg value="-Ddeployer.util.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-util.tld" />
						<jvmarg value="-Ddeployer.unpack.war=true" />
						<jvmarg value="-Ddeployer.file.pattern=${plugin.name}-*.war" />

						<!-- Optional Arguments -->

						<jvmarg value="-Ddeployer.tomcat.lib.dir=${app.server.tomcat.lib.global.dir}" />

						<!-- Dependent Libraries -->

						<arg value="${app.server.lib.portal.dir}/util-bridges.jar" />
						<arg value="${app.server.lib.portal.dir}/util-java.jar" />
						<arg value="${app.server.lib.portal.dir}/util-taglib.jar" />
					</java>
				</then>
			</elseif>
			<elseif>
				<antelope:endswith string="${plugin.name}" with="-theme" />
				<then>
					<java
						classname="com.liferay.portal.tools.deploy.ThemeDeployer"
						classpathref="portal.classpath"
						fork="true"
						newenvironment="true"
					>

						<!-- Required Arguments -->

						<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
						<jvmarg value="-Dliferay.lib.portal.dir=${app.server.lib.portal.dir}" />
						<jvmarg value="-Ddeployer.base.dir=${project.dir}/dist" />
						<jvmarg value="-Ddeployer.dest.dir=${app.server.deploy.dir}" />
						<jvmarg value="-Ddeployer.app.server.type=${app.server.type}" />
						<jvmarg value="-Ddeployer.theme.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-theme.tld" />
						<jvmarg value="-Ddeployer.util.taglib.dtd=${app.server.portal.dir}/WEB-INF/tld/liferay-util.tld" />
						<jvmarg value="-Ddeployer.unpack.war=true" />
						<jvmarg value="-Ddeployer.file.pattern=${plugin.name}-*.war" />

						<!-- Optional Arguments -->

						<jvmarg value="-Ddeployer.tomcat.lib.dir=${app.server.tomcat.lib.global.dir}" />

						<!-- Dependent Libraries -->

						<arg value="${app.server.lib.portal.dir}/util-java.jar" />
						<arg value="${app.server.lib.portal.dir}/util-taglib.jar" />
					</java>
				</then>
			</elseif>
		</if>
	</target>

	<target name="merge" if="original.war.file">
		<if>
			<not>
				<uptodate srcfile="${original.war.file}" targetfile="tmp" />
			</not>
			<then>
				<delete dir="tmp" />
				<mkdir dir="tmp" />

				<mkdir dir="tmp/WEB-INF/classes" />
				<mkdir dir="tmp/WEB-INF/lib" />

				<antcall target="merge-unzip" />

				<copy todir="tmp" overwrite="true">
					<fileset dir="docroot" />
				</copy>
			</then>
		</if>

		<copy todir="tmp">
			<fileset dir="docroot" />
		</copy>
	</target>

	<target name="merge-unzip">
		<unzip dest="tmp" src="${original.war.file}" />
	</target>

	<target name="war" depends="compile">
		<mkdir dir="${project.dir}/dist" />

		<if>
			<available file="tmp" />
			<then>
				<property name="docroot.dir" value="tmp" />
			</then>
			<else>
				<property name="docroot.dir" value="docroot" />
			</else>
		</if>

		<delete file="${plugin.file}" />

		<antcall target="clean-portal-dependencies" />

		<if>
			<contains string="${app.server.dir}" substring="glassfish" />
			<then>
				<zip
					basedir="${docroot.dir}"
					destfile="${plugin.file}"
					excludes="**/META-INF/context.xml"
				/>
			</then>
		<else>
				<zip
					basedir="${docroot.dir}"
					destfile="${plugin.file}"
				/>
			</else>
		</if>
	</target>
</project>